<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="3.1" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:jsp="http://java.sun.com/xml/ns/javaee/jsp"
		xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" >

  <!-- web应用名称 -->
  <!-- <display-name>app-name</display-name> -->

  <!-- 访问的默认页面 -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>/view/index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

  <!-- 配置DispatcherServlet，中央处理器 -->
  <servlet>
      <servlet-name>springDispatcherServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

      <!-- 配置DispatcherServlet的一个初始化参数，作用是配置SpringMVC配置文件的位置和名称 -->
      <init-param>
          <param-name>contextConfigLocation</param-name>
          <!--classpath：只会到你的class路径中查找找文件;-->
          <!--classpath*：不仅包含class路径，还包括jar文件中(class路径)进行查找.-->
          <param-value>classpath:spring-mvc.xml,classpath*:spring-mvc.xml</param-value>
      </init-param>

      <!-- load-on-startup 表示在web应用启动时，即加载该DispatcherServlet，而不是等到首次请求再中载 -->
      <load-on-startup>1</load-on-startup>
  </servlet>


  <servlet-mapping>
      <servlet-name>springDispatcherServlet</servlet-name>
      <!-- 拦截后缀为 .jsp请求的url 或所有类型的文件，跳转到spmvc-servlet.xml进行解析 -->
      <!-- 把  *.jsp  改成  / 后，表示默认的servlet为DispatcherServlet，如果不改则表示index，jsp为要处理是servlet-->
      <url-pattern>/</url-pattern>
  </servlet-mapping>


</web-app>
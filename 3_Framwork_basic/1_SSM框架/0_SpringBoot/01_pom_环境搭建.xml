<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo</name>
	<description>Demo project for Spring Boot</description>
	
	<!--
	Spring Boot 父级依赖，该项目就属于 Spring Boot 项目；
	spring-boot-starter-parent 是一个特殊的 starter, 用来提供相关的 Maven 默认依赖，
	使用它之后，常用的包依赖可以省去 version 标签。
	如果你不想使用某个依赖默认的版本，您还可以通过覆盖自己的项目中的属性来覆盖各个依赖项。
	-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- 提供Tomcat服务器，是web项目的基础依赖-->
		<dependency>
		       <groupId>org.springframework.boot</groupId>
		       <artifactId>spring-boot-starter-web</artifactId>
		</dependency>
				
	</dependencies>
	
	<!--
	Spring Boot Maven 的插件，提供一些方便的功能
	1.把项目打包成一个可执行的超级 JAR（uber-JAR）, 
	包括把应用程序的所有依赖打入 JAR 文件内，并为 JAR 添加一个描述文件，
	其中的内容能让你用 java -jar 来运行应用程序。
	2.搜索 public static void main() 方法来标记为可运行类。
	-->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>

{"root":{"data":{"id":"c20l3h5mnsg0","created":1586832278733,"text":"JVM"},"children":[{"data":{"id":"c20l3tdubq80","created":1586832305351,"text":"自动内存管理机制","priority":1},"children":[{"data":{"id":"c20l5kje5ds0","created":1586832442824,"text":"Java内存区域与内存溢出异常"},"children":[{"data":{"id":"c20l5uw7aeo0","created":1586832465366,"text":"运行时数据区域"},"children":[{"data":{"id":"c20lasz9drs0","created":1586832853019,"text":"JVM内存划分：程序计数器、堆、虚拟机栈、本地方法栈、方法区、直接内存"},"children":[]}]},{"data":{"id":"c20l5xcyv6o0","created":1586832470734,"text":"内存中的对象"},"children":[{"data":{"id":"c20lccm4qxs0","created":1586832974124,"text":"对象创建过程：为对象分配内存"},"children":[]},{"data":{"id":"c20lcf961eo0","created":1586832979871,"text":"对象在内存中的存储：分为几部分"},"children":[]},{"data":{"id":"c20lcmt0wvs0","created":1586832996309,"text":"访问对象的方式：句柄访问和直接指针"},"children":[]}]},{"data":{"id":"c20l5zku8io0","created":1586832475563,"text":"OutOfMemoryError异常"},"children":[{"data":{"id":"c20lf8f74800","created":1586833200091,"text":"四种情况：栈溢出、堆溢出、方法区溢出、直接内存溢出","expandState":"expand"},"children":[]}]}]},{"data":{"id":"c20l5nmi2zs0","created":1586832449542,"text":"垃圾收集器与内存分配策略"},"children":[{"data":{"id":"c20l63j6gm80","created":1586832484170,"text":"对象存活判断"},"children":[{"data":{"id":"c20lgwam3680","created":1586833330420,"text":"判断对象存活的两种算法：引用计数法和可达性分析算法"},"children":[]},{"data":{"id":"c20lhkw5obk0","created":1586833383966,"text":"四种引用：强引用、软引用、弱引用、虚引用"},"children":[]},{"data":{"id":"c20li3povwo0","created":1586833424934,"text":"判断对象死亡的过程"},"children":[]},{"data":{"id":"c20li8qx61s0","created":1586833435892,"text":"方法区的回收"},"children":[]}]},{"data":{"id":"c20l65o34h40","created":1586832488820,"text":"垃圾收集算法"},"children":[{"data":{"id":"c20ljec3exk0","created":1586833526420,"text":"总共三种：标记清除、复制、标记整理","expandState":"expand"},"children":[{"data":{"id":"c20ljrc1a4g0","created":1586833554715,"text":"收集方式：分代收集"},"children":[]}]}]},{"data":{"id":"c20l67ovjz40","created":1586832493222,"text":"HotSpot的算法实现"},"children":[]},{"data":{"id":"c20l69kr6w00","created":1586832497326,"text":"垃圾收集器"},"children":[{"data":{"id":"c20lko6ra2o0","created":1586833626230,"text":"收集器分类以及工作过程"},"children":[{"data":{"id":"c20lkrvuuu80","created":1586833634278,"text":"关注CMS收集器"},"children":[]}]}]},{"data":{"id":"c20l6bhgicg0","created":1586832501480,"text":"内存分配与回收策略"},"children":[{"data":{"id":"c20llin2qvs0","created":1586833692520,"text":"对象的分配和回收策略"},"children":[]}]}]},{"data":{"id":"c20l5puo6s00","created":1586832454390,"text":"虚拟机性能监控与故障处理工具"},"children":[{"data":{"id":"c20l6f17j5s0","created":1586832509205,"text":"JDK命令工具"},"children":[{"data":{"id":"c20lm85mg940","created":1586833748061,"text":"jps、jstat、jstack、jmap、jinfo"},"children":[]}]}]}]},{"data":{"id":"c20l3xpo80w0","created":1586832314774,"text":"虚拟机执行子系统"},"children":[{"data":{"id":"c20l6qkpeds0","created":1586832534328,"text":"类文件结构","priority":3},"children":[{"data":{"id":"c20l70v9i600","created":1586832556734,"text":"Class类文件的结构"},"children":[{"data":{"id":"c20lye6em340","created":1586834701539,"text":"字节码文件.class的解析"},"children":[]}]},{"data":{"id":"c20l72szkdk0","created":1586832560950,"text":"字节码指令简介"},"children":[{"data":{"id":"c20lz3x83jc0","created":1586834757580,"text":"JVM中操作字节码的指令"},"children":[]}]},{"data":{"id":"c20l74mcew80","created":1586832564902,"text":"公有设计和私有实现及Class文件结构的发展"},"children":[]}]},{"data":{"id":"c20l6soia6w0","created":1586832538912,"text":"虚拟机类加载机制","priority":1},"children":[{"data":{"id":"c20l78ew2ug0","created":1586832573159,"text":"类加载的时机及过程"},"children":[{"data":{"id":"c20m0bl7br40","created":1586834852631,"text":"把class文件加载到JVM内存"},"children":[]}]},{"data":{"id":"c20l7a5py1k0","created":1586832576958,"text":"类加载器"},"children":[{"data":{"id":"c20m0q76mfc0","created":1586834884436,"text":"双亲委派模型的内容"},"children":[]}]}]},{"data":{"id":"c20l6wk2b400","created":1586832547350,"text":"虚拟机字节码执行引擎","priority":3},"children":[{"data":{"id":"c20l7eqbigg0","created":1586832586911,"text":"运行时栈帧结构"},"children":[{"data":{"id":"c20m1yd7bkw0","created":1586834980578,"text":"主要是虚拟机栈在执行字节码的结构"},"children":[]}]},{"data":{"id":"c20l7gg85z40","created":1586832590654,"text":"方法调用"},"children":[{"data":{"id":"c20m2n6walc0","created":1586835034616,"text":"运行时期方法调用的流程，包括方法调用和方法执行"},"children":[]}]},{"data":{"id":"c20l7i4b7rk0","created":1586832594287,"text":"基于栈的字节码解释执行引擎"},"children":[]}]}]},{"data":{"id":"c20l41mf8ao0","created":1586832323284,"text":"程序编译与代码优化"},"children":[{"data":{"id":"c20l7m8surs0","created":1586832603265,"text":"早期(编译期)优化","priority":2},"children":[{"data":{"id":"c20l7qexivk0","created":1586832612343,"text":"Javac编译器"},"children":[{"data":{"id":"c20m4ktgchs0","created":1586835186178,"text":"java编译的过程，把.java转换成.class文件"},"children":[]}]},{"data":{"id":"c20l7scthiw0","created":1586832616569,"text":"Java语法糖的味道"},"children":[{"data":{"id":"c20louugm7s0","created":1586833954180,"text":"泛型的原理"},"children":[]},{"data":{"id":"c20m4vo59ig0","created":1586835209802,"text":"其他语法糖"},"children":[]}]}]},{"data":{"id":"c20l7o4dnyg0","created":1586832607352,"text":"晚期(运行期)优化","priority":2},"children":[{"data":{"id":"c20l7y5qgpc0","created":1586832629201,"text":"HotSpot虚拟机的即时编译器"},"children":[{"data":{"id":"c20m5fofgpc0","created":1586835253355,"text":"解释器和编译器：将字节码转换成机器码"},"children":[]}]}]}]},{"data":{"id":"c20l461y89s0","created":1586832332930,"text":"高效并发","priority":1},"children":[{"data":{"id":"c20l854h2gw0","created":1586832644363,"text":"Java内存模型与线程","priority":null},"children":[{"data":{"id":"c20l88y45wo0","created":1586832652685,"text":"Java内存模型"},"children":[{"data":{"id":"c20m6wfsc740","created":1586835368201,"text":"JVM和工作内存的交互"},"children":[]},{"data":{"id":"c20m72m8cxs0","created":1586835381652,"text":"对于线程安全的保障"},"children":[]}]},{"data":{"id":"c20l8apfjt40","created":1586832656514,"text":"Java与线程"},"children":[{"data":{"id":"c20m7urrry00","created":1586835442937,"text":"JVM利用系统实现线程的方式"},"children":[]}]}]},{"data":{"id":"c20l86y5rog0","created":1586832648334,"text":"线程安全与锁优化"},"children":[{"data":{"id":"c20l8dihgns0","created":1586832662624,"text":"线程安全"},"children":[{"data":{"id":"c20m8s1solc0","created":1586835515377,"text":"多线程同步机制在JVM中的原理"},"children":[]}]},{"data":{"id":"c20l8f196480","created":1586832665936,"text":"锁优化"},"children":[]}]}]}]},"template":"right","theme":"snow-compact","version":"1.4.43"}